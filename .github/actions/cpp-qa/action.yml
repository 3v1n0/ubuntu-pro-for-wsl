name: C++ Quality Checks
description: Do some quality checks via CMake and MSVC Code Analysis

inputs:
  subproject-dir:
    required: true
    description: "Subdirectory of the repository root where lies the code to be checked." 
  build-dir:
    default: 'out'
    description: "CMake build directory relative to the subproject dir."
  config:
    default: 'Debug'
    description: "The build configuration. Most likely you want Debug."   

# Assumes the repo is already checked out and we run on Windows.
runs:
  using: "composite"
  steps:
    - name: Configure CMake
      working-directory:  ${{ inputs.subproject-dir }}
      shell: powershell
      run: |
        Write-Output $PWD
        cmake -E make_directory ${{ inputs.build-dir }}
        cmake -S . -B ${{ inputs.build-dir }} -DCMAKE_BUILD_TYPE=${{ inputs.config }}
    - name: Run tests
      working-directory:  ${{ inputs.subproject-dir }}
      shell: powershell
      run: |
        cmake --build ${{ inputs.build-dir }}
        ctest --test-dir ${{ inputs.build-dir }}
    - name: Run MSVC Code Analysis
      uses: microsoft/msvc-code-analysis-action@v0.1.1
      # Provide a unique ID to access the sarif output path
      id: run-analysis
      with:
        cmakeBuildDirectory: "${{ inputs.subproject-dir }}/${{ inputs.build-dir }}"
        buildConfiguration: ${{ inputs.config }}
        # Ruleset file that will determine what checks will be run
        ruleset: NativeRecommendedRules.ruleset
        ignoredPaths: ${{ inputs.build-dir }} # Dependencies are placed in subdirectories of that.
    # Upload SARIF file to GitHub Code Scanning Alerts
    - name: Upload SARIF to GitHub
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ steps.run-analysis.outputs.sarif }}
