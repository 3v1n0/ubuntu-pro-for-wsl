<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
		<GoAppRoot>$(MSBuildThisFileDirectory)..\..\windows-agent\</GoAppRoot>
		<GoAppDir>$(GoAppRoot)cmd\ubuntu-pro-agent\</GoAppDir>
        <GoBuildTags Condition="'$(UP4W_TEST_WITH_MS_STORE_MOCK)' != ''">-tags=server_mocks</GoBuildTags>
        <VersionDefine Condition="$(UP4W_FULL_VERSION) != '' ">-ldflags="-X=github.com/canonical/ubuntu-pro-for-wsl/windows-agent/internal/consts.Version=$(UP4W_FULL_VERSION)"</VersionDefine>
	</PropertyGroup>
    <ItemGroup>
      <None Include="$(GoAppRoot)\**\*.go" />
    </ItemGroup>
    <!-- Writes into the "DepAssemblies" item the location where building the @(ProjectReference) projectwill output its assemblies (without actually building it) -->
    <Target Name="GetDepsOutputPaths" BeforeTargets="Build">
        <MSBuild Projects="@(ProjectReference)" Targets="GetTargetPath">
            <Output TaskParameter="TargetOutputs" ItemName="DepAssemblies" />
        </MSBuild>
    </Target>
    <!-- Forces building the @(ProjectReference) project before building this project -->
    <Target Name="BuildDeps" BeforeTargets="Build">
        <Message Text="Building @(ProjectReference)" Importance="high" />
        <MSBuild Projects="@(ProjectReference)" Targets="Build">
        </MSBuild>
    </Target>
	<Target Name="Build" DependsOnTargets="BuildDeps">
        <!-- Here we can be confident that "DepAssemblies" have been computed and built -->
        <ItemGroup>
            <None Include="@(DepAssemblies)">
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
                <DeploymentContent>true</DeploymentContent>
            </None>
        </ItemGroup>
        <Message Text="Building Go artifacts to $(OutDir) and bundling @(DepAssemblies)" Importance="high"/>
        <MakeDir Directories="$(OutDir)" />
		<Exec Command="go build $(GoBuildTags) $(VersionDefine) $(GoAppDir)" WorkingDirectory="$(OutDir)" />
	</Target>
    <Target Name="Clean" Condition="Exists($(TargetPath))">
		<Message Text="Cleaning $(TargetPath)" Importance="high" />
		<Delete Files="$(TargetPath)" />
	</Target>
</Project>
